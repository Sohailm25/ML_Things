{"_id":"note:_7g5lFA5d","title":"Sudoku Solver Backtracking Algorithm","content":"```python\n\ndef solve_board(startX, startY, board):\n    \n    #print(solution)\n\n    if (startY > 8):\n        startY = 0\n        startX += 1\n    \n    if (startX > 8):\n        #print(\"Final Solution Found\")\n        #print(board)\n        return True\n\n    if (board[startX][startY] == 0):\n        \n        #print((startX,startY))\n        i = 1\n                \n        while (i < 10):\n                    \n            if (check_row(i, startX, board) & check_col(i, startY, board) & check_3x3(i, startX, startY, board)):\n                        \n                board[startX][startY] = i\n        \n                if (solve_board(startX, startY + 1, board)):\n                    return True\n                else:\n                    board[startX][startY] = 0\n\n            i += 1\n                    \n                \n        #if (i > 9):\n        return False\n\n    else:\n        if (solve_board(startX, startY + 1, board)):\n            return True\n","tags":["backtracking","algorithms"],"folderPathname":"/","data":{},"createdAt":"2020-10-24T18:31:10.861Z","updatedAt":"2020-10-24T18:31:46.222Z","trashed":false,"_rev":"GFsHOfccD"}